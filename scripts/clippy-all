#!/usr/bin/env bash
# This script runs clippy with the most common configurations.
# Arguments given will be passed through to "cargo clippy"
# This runs in the Makefile environment via "make run"

set -euo pipefail

# Run from the Makefile environment
MAKEFILE_RUN=${MAKEFILE_RUN:-""}
if [[ -z $MAKEFILE_RUN ]] ; then
	COMMAND="$0 $*" exec make run
fi

ALLOWED_CLIPPY_LINTS=(-A clippy::module_inception -A clippy::needless_pass_by_value -A clippy::cognitive_complexity \
	-A clippy::unreadable_literal -A clippy::should_implement_trait -A clippy::verbose_bit_mask \
	-A clippy::implicit_hasher -A clippy::large_enum_variant -A clippy::new_without_default \
	-A clippy::neg_cmp_op_on_partial_ord -A clippy::too_many_arguments \
	-A clippy::excessive_precision -A clippy::collapsible_if -A clippy::blacklisted_name \
	-A clippy::needless_range_loop -A clippy::redundant_closure \
	-A clippy::match_wild_err_arm -A clippy::blacklisted_name -A clippy::redundant_closure_call \
	-A clippy::useless_conversion -A clippy::new_ret_no_self -A clippy::unnecessary_sort_by)

if [[ "${TIKV_ENABLE_FEATURES}" == *prost-codec* ]] ; then
	cargo clippy --workspace --all-targets --no-default-features \
		--exclude cdc --exclude backup --exclude tests --exclude cmd \
		--exclude fuzz-targets --exclude fuzzer-honggfuzz --exclude fuzzer-afl --exclude fuzzer-libfuzzer \
		--features "${TIKV_ENABLE_FEATURES}" -- "${ALLOWED_CLIPPY_LINTS[@]}"
	for pkg in "components/cdc" "components/backup" "cmd" "tests"; do
		cd $pkg
		cargo clippy --all-targets --no-default-features \
			--features "${TIKV_ENABLE_FEATURES}" -- "${ALLOWED_CLIPPY_LINTS[@]}"
		cd - >/dev/null
	done
	for pkg in "fuzz"; do
		cd $pkg
		cargo clippy --all-targets -- "${ALLOWED_CLIPPY_LINTS[@]}"
		cd - >/dev/null
	done
else
	cargo clippy --workspace \
		--exclude fuzzer-honggfuzz --exclude fuzzer-afl --exclude fuzzer-libfuzzer \
		--features "${TIKV_ENABLE_FEATURES}" -- "${ALLOWED_CLIPPY_LINTS[@]}"
fi